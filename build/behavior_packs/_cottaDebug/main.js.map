{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"../cotta/scripts/main.js","sourcesContent":["import {\r\n  ButtonPushAfterEvent,\r\n  ChatSendBeforeEvent,\r\n  DimensionLocation,\r\n  Entity,\r\n  EntityDieAfterEvent,\r\n  Player,\r\n  PlayerSpawnAfterEvent,\r\n  system,\r\n  Vector3,\r\n  world,\r\n} from \"@minecraft/server\";\r\nimport { MessageFormData, MessageFormResponse } from \"@minecraft/server-ui\";\r\n\r\n/***************** Global Variables ***********************/\r\nconst JORDAN_NAME: string = \"calvell0\";\r\nlet jordan: Player;\r\nconst overworld = world.getDimension(\"overworld\");\r\nconst secondaryPlayerSpawns: Map<string, DimensionLocation> = new Map();\r\nconst playerSpawnsToMonitor: Map<string, Vector3> = new Map();\r\n/**********************************************************/\r\n\r\nconst setJordan = (event: PlayerSpawnAfterEvent) => {\r\n  if (!event.initialSpawn || event.player.name !== JORDAN_NAME) {\r\n    return;\r\n  }\r\n  jordan = event.player;\r\n};\r\n\r\nconst sendUserInstructions = (event: PlayerSpawnAfterEvent) => {\r\n  if (!event.initialSpawn) {\r\n    return;\r\n  }\r\n\r\n  world.sendMessage(\r\n    \"Type !set in chat to set a secondary spawn point. You'll be able to select which point to spawn from after dying.\"\r\n  );\r\n};\r\n\r\nconst handlePlayerEvent = (event: ButtonPushAfterEvent) => {\r\n  if (event.source != jordan) {\r\n    return;\r\n  }\r\n\r\n  let rand = Math.random();\r\n  const MAX_TIMEOUT_TICKS = 10000;\r\n  let randomTimeout: number = Math.round(Math.random() * MAX_TIMEOUT_TICKS);\r\n  if (rand <= 0.5) {\r\n    system.runTimeout(fuckWithJordan, randomTimeout);\r\n  }\r\n};\r\n\r\nconst fuckWithJordan = () => {\r\n  const jordanLocation = jordan.getHeadLocation();\r\n  const parrotSpawnLocation = getRandomNewLocation(jordanLocation);\r\n\r\n  const newParrot: Entity = overworld.spawnEntity(\"minecraft:parrot\", parrotSpawnLocation);\r\n  world.sendMessage(\"parrot spawned\");\r\n};\r\n\r\nconst getRandomNewLocation = (coordinates: Vector3, maxDistance: number = 15): Vector3 => {\r\n  coordinates.x += Math.round(Math.random() * (maxDistance * 2)) - maxDistance;\r\n  coordinates.z += Math.round(Math.random() * (maxDistance * 2)) - maxDistance;\r\n  return coordinates;\r\n};\r\n\r\nconst handleChatEvents = (event: ChatSendBeforeEvent) => {\r\n  const chat = event.message;\r\n\r\n  if (!chat.startsWith(\"!\")) {\r\n    return;\r\n  }\r\n\r\n  let command = chat.split(\" \");\r\n\r\n  switch (command[0]) {\r\n    case \"!set\":\r\n      handleSetCommand(event);\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nconst handleSetCommand = (event: ChatSendBeforeEvent) => {\r\n  const player = event.sender.id;\r\n  const playerLocation = event.sender.getHeadLocation();\r\n\r\n  secondaryPlayerSpawns.set(player, vector3ToDimensionLocation(playerLocation));\r\n  world.sendMessage(\"new spawn set: \" + secondaryPlayerSpawns.get(player));\r\n};\r\n\r\nconst vector3ToDimensionLocation = (vec: Vector3): DimensionLocation  => {\r\n\r\n  let x = Math.round(vec.x);\r\n  let y = Math.round(vec.y);\r\n  let z = Math.round(vec.z);\r\n  let dimension = world.getDimension(\"overworld\");\r\n  return { x, y, z, dimension } as DimensionLocation;\r\n};\r\n\r\nconst handleDie = (event: EntityDieAfterEvent) => {\r\n  let secondSpawn: DimensionLocation | undefined;\r\n  if (!(secondSpawn = secondaryPlayerSpawns.get(event.deadEntity.id))) {\r\n    return;\r\n  }\r\n\r\n  secondSpawn = secondSpawn as DimensionLocation;\r\n\r\n  const player = event.deadEntity as Player;\r\n  const { x: x1, y: y1, z: z1 } = player.getSpawnPoint() || world.getDefaultSpawnLocation();\r\n  const { x: x2, y: y2, z: z2 } = secondaryPlayerSpawns.get(player.id) || world.getDefaultSpawnLocation();\r\n  const messageForm = new MessageFormData()\r\n    .title(\"Select a spawn point:\")\r\n    .body(`Original spawn: ${x1}, ${64}, ${z1} \\n Secondary spawn point: ${x2}, ${y2}, ${z2}`)\r\n    .button1(`Original spawn`)\r\n    .button2(`Secondary spawn`);\r\n\r\n  messageForm.show(player).then((formData: MessageFormResponse) => {\r\n    if (formData.selection === 0 || !formData.selection) {\r\n      return;\r\n    }\r\n    let originalPlayerSpawn: DimensionLocation | undefined;\r\n    if (!(originalPlayerSpawn = player.getSpawnPoint())) {\r\n      originalPlayerSpawn = vector3ToDimensionLocation(world.getDefaultSpawnLocation());\r\n    }\r\n\r\n    player.setSpawnPoint(secondSpawn);\r\n    // @ts-ignore\r\n    world.sendMessage(`Set temp spawn: ${secondSpawn.x}, ${secondSpawn.z} for player: ${player.name}`);\r\n    const { x, y, z } = originalPlayerSpawn;\r\n    playerSpawnsToMonitor.set(player.id, { x, y, z });\r\n\r\n    world.afterEvents.playerSpawn.subscribe(handleSpawnAfterUsingSecondary);\r\n  });\r\n}\r\n\r\nconst handleSpawnAfterUsingSecondary = (event: PlayerSpawnAfterEvent) => {\r\n  const player = event.player;\r\n  world.sendMessage(\"spawnAfterEvent triggered\");\r\n  if (!playerSpawnsToMonitor.has(player.id)){\r\n    return;\r\n  }\r\n\r\n\r\n  let tempOriginalSpawn: Vector3 = playerSpawnsToMonitor.get(player.id) as Vector3;\r\n  const originalSpawn: DimensionLocation = vector3ToDimensionLocation(tempOriginalSpawn);\r\n\r\n\r\n  system.runTimeout(() => {\r\n    player.setSpawnPoint(originalSpawn);\r\n    world.sendMessage(`set original spawn: ${originalSpawn.x}, ${originalSpawn.z} for player: ${player.name}`)\r\n  }, 100);\r\n  playerSpawnsToMonitor.delete(player.id);\r\n\r\n  if (playerSpawnsToMonitor.size === 0){\r\n    world.afterEvents.playerSpawn.unsubscribe(handleSpawnAfterUsingSecondary);\r\n  }\r\n}\r\n\r\nworld.afterEvents.playerSpawn.subscribe(setJordan); //check if newly joining players are jordan\r\nworld.afterEvents.playerSpawn.subscribe(sendUserInstructions);\r\n\r\nworld.afterEvents.buttonPush.subscribe(handlePlayerEvent);\r\n\r\nworld.beforeEvents.chatSend.subscribe(handleChatEvents);\r\n\r\nworld.afterEvents.entityDie.subscribe(handleDie);\r\n"],"sourceRoot":"../../../scripts/"}