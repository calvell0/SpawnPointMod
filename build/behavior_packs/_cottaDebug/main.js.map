{"version":3,"sources":["main.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,KAAK,EACL,MAAM,GAcP,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,eAAe,EAAuB,MAAM,sBAAsB,CAAC;AAE5E,4DAA4D;AAC5D,MAAM,WAAW,GAAW,UAAU,CAAC;AACvC,IAAI,MAAc,CAAC;AACnB,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AAClD,MAAM,qBAAqB,GAAyB,IAAI,GAAG,EAAE,CAAC;AAC9D,4DAA4D;AAE5D,MAAM,SAAS,GAAG,CAAC,KAA4B,EAAE,EAAE;IACjD,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;QAC5D,OAAO;KACR;IACD,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AACxB,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAAC,KAA4B,EAAE,EAAE;IAC5D,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;QACvB,OAAO;KACR;IAED,KAAK,CAAC,WAAW,CACf,mHAAmH,CACpH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,KAA2B,EAAE,EAAE;IACxD,IAAI,KAAK,CAAC,MAAM,IAAI,MAAM,EAAE;QAC1B,OAAO;KACR;IAED,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IACzB,MAAM,iBAAiB,GAAG,KAAK,CAAC;IAChC,IAAI,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,iBAAiB,CAAC,CAAC;IAC1E,IAAI,IAAI,IAAI,GAAG,EAAE;QACf,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;KAClD;AACH,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,GAAG,EAAE;IAC1B,MAAM,cAAc,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;IAChD,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,cAAc,CAAC,CAAC;IAEjE,MAAM,SAAS,GAAW,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;IACzF,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAAC,WAAoB,EAAE,cAAsB,EAAE,EAAW,EAAE;IACvF,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC7E,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC7E,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,KAA0B,EAAE,EAAE;IACtD,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;IAE3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QACzB,OAAO;KACR;IAED,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE9B,QAAQ,OAAO,CAAC,CAAC,CAAC,EAAE;QAClB,KAAK,MAAM;YACT,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC1B;YACE,OAAO;KACV;AACH,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,KAA0B,EAAE,EAAE;IACtD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IAC/B,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;IACtD,qBAAqB,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,0BAA0B,GAAG,CAAC,GAAwB,EAAiC,EAAE;IAC7F,IAAI,CAAC,GAAG;QAAE,OAAO,SAAS,CAAC;IAC3B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACd,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAChD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAuB,CAAC;AACrD,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,CAAC,KAA0B,EAAE,EAAE;IAC/C,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;QACnD,OAAO;KACR;IAED,MAAM,MAAM,GAAG,KAAK,CAAC,UAAoB,CAAC;IAC1C,MAAM,WAAW,GAAG,IAAI,eAAe,EAAE;SACtC,KAAK,CAAC,uBAAuB,CAAC;SAC9B,OAAO,CAAC,mBAAmB,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC;SACpD,OAAO,CAAC,0BAA0B,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE7E,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAA6B,EAAE,EAAE;QAC9D,IAAI,QAAQ,CAAC,SAAS,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YACnD,OAAO;SACR;QACD,IAAI,KAAoC,CAAC;QACzC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE;YACrC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,WAAW,GAAG,0BAA0B,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAClC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACrB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,2CAA2C;AAC/F,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;AAE9D,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;AAE1D,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAExD,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC","file":"../cotta/scripts/main.js","sourcesContent":["import {\n  world,\n  system,\n  EntityHealthChangedAfterEvent,\n  EntityHealthChangedAfterEventSignal,\n  Player,\n  PlayerJoinAfterEvent,\n  PlayerJoinAfterEventSignal,\n  PlayerSpawnAfterEvent,\n  ButtonPushAfterEvent,\n  Vector3,\n  Entity,\n  EntityScaleComponent,\n  ChatSendBeforeEvent,\n  EntityDieAfterEvent,\n  DimensionLocation,\n} from \"@minecraft/server\";\nimport { MessageFormData, MessageFormResponse } from \"@minecraft/server-ui\";\n\n/***************** Global Variables ***********************/\nconst JORDAN_NAME: string = \"calvell0\";\nlet jordan: Player;\nconst overworld = world.getDimension(\"overworld\");\nconst secondaryPlayerSpawns: Map<string, Vector3> = new Map();\n/**********************************************************/\n\nconst setJordan = (event: PlayerSpawnAfterEvent) => {\n  if (!event.initialSpawn || event.player.name !== JORDAN_NAME) {\n    return;\n  }\n  jordan = event.player;\n};\n\nconst sendUserInstructions = (event: PlayerSpawnAfterEvent) => {\n  if (!event.initialSpawn) {\n    return;\n  }\n\n  world.sendMessage(\n    \"Type !set in chat to set a secondary spawn point. You'll be able to select which point to spawn from after dying.\"\n  );\n};\n\nconst handlePlayerEvent = (event: ButtonPushAfterEvent) => {\n  if (event.source != jordan) {\n    return;\n  }\n\n  let rand = Math.random();\n  const MAX_TIMEOUT_TICKS = 10000;\n  let randomTimeout: number = Math.round(Math.random() * MAX_TIMEOUT_TICKS);\n  if (rand <= 0.5) {\n    system.runTimeout(fuckWithJordan, randomTimeout);\n  }\n};\n\nconst fuckWithJordan = () => {\n  const jordanLocation = jordan.getHeadLocation();\n  const parrotSpawnLocation = getRandomNewLocation(jordanLocation);\n\n  const newParrot: Entity = overworld.spawnEntity(\"minecraft:parrot\", parrotSpawnLocation);\n  world.sendMessage(\"parrot spawned\");\n};\n\nconst getRandomNewLocation = (coordinates: Vector3, maxDistance: number = 15): Vector3 => {\n  coordinates.x += Math.round(Math.random() * (maxDistance * 2)) - maxDistance;\n  coordinates.z += Math.round(Math.random() * (maxDistance * 2)) - maxDistance;\n  return coordinates;\n};\n\nconst handleChatEvents = (event: ChatSendBeforeEvent) => {\n  const chat = event.message;\n\n  if (!chat.startsWith(\"!\")) {\n    return;\n  }\n\n  let command = chat.split(\" \");\n\n  switch (command[0]) {\n    case \"!set\":\n      handleSetCommand(event);\n    default:\n      return;\n  }\n};\n\nconst handleSetCommand = (event: ChatSendBeforeEvent) => {\n  const player = event.sender.id;\n  const playerLocation = event.sender.getHeadLocation();\n  secondaryPlayerSpawns.set(player, playerLocation);\n};\n\nconst vector3ToDimensionLocation = (vec: Vector3 | undefined): DimensionLocation | undefined => {\n  if (!vec) return undefined;\n  let x = vec.x;\n  let y = vec.y;\n  let z = vec.z;\n  let dimension = world.getDimension(\"overworld\");\n  return { x, y, z, dimension } as DimensionLocation;\n};\n\nconst handleDie = (event: EntityDieAfterEvent) => {\n  if (!secondaryPlayerSpawns.has(event.deadEntity.id)) {\n    return;\n  }\n\n  const player = event.deadEntity as Player;\n  const messageForm = new MessageFormData()\n    .title(\"Select a spawn point:\")\n    .button1(`Original spawn: ${player.getSpawnPoint()}`)\n    .button2(`Secondary spawn point: ${secondaryPlayerSpawns.get(player.id)}`);\n\n  messageForm.show(player).then((formData: MessageFormResponse) => {\n    if (formData.selection === 0 || !formData.selection) {\n      return;\n    }\n    let spawn: DimensionLocation | undefined;\n    if (!(spawn = player.getSpawnPoint())) {\n      console.log(\"weird error wtf\");\n      return;\n    }\n\n    let newLocation = vector3ToDimensionLocation(secondaryPlayerSpawns.get(player.id));\n    player.setSpawnPoint(newLocation);\n    system.runTimeout(() => {\n      player.setSpawnPoint(spawn);\n    }, 100);\n  });\n};\n\nworld.afterEvents.playerSpawn.subscribe(setJordan); //check if newly joining players are jordan\nworld.afterEvents.playerSpawn.subscribe(sendUserInstructions);\n\nworld.afterEvents.buttonPush.subscribe(handlePlayerEvent);\n\nworld.beforeEvents.chatSend.subscribe(handleChatEvents);\n\nworld.afterEvents.entityDie.subscribe(handleDie);\n"],"sourceRoot":"../../../scripts/"}